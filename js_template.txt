//
var RENDER_TIME = 1000/24;
var MOVE_TIME = RENDER_TIME*6;
var levels = [{'o':[], 'p':[], 'f':[]}];

function level(o, p, f){
    var objs = o;
    var param = p;
    var funcs = f;
    var done = false;
	var renderCnt = 0;
    this.render = function(ctx){
		renderCnt++;
		if (renderCnt >= MOVE_TIME){
			for(var i=0; i<funcs.length; i++){
				funcs[i];
			};
		};
		this.draw(ctx);
    };
    this.draw = function(canvas){
		for(var i = 0; i < o.length; i++){
			for (var spriteIndex = 0; spriteIndex < o[i].pic.length; spriteIndex++ )
				canvas.drawImage(o[i].pic[spriteIndex].name, o[i].pic[spriteIndex].x-o[i].pic[spriteIndex].width, o[i].pic[spriteIndex].y-o[i].pic[spriteIndex].height);
		}
    }
};

//create canvas
var pole = document.getElementById('myCanvas');
var ctx = pole.getContext("2d");

//user input
var playerInput = {x:0, y:0};
pole.addEventListener('click', function(event){
    var clickX = (event.layerX == undefined ? event.offsetX : event.layerX) + 1;
    var clickY = (event.layerY == undefined ? event.offsetY : event.layerY) + 1;
    playerInput.x = clickX;
    playerInput.y = clickY;
    alert(playerInput.x);
}, false);

//rendering game
var lvlIndex = 0;
var currentlevel = new level(levels[lvlIndex].o, levels[lvlIndex].p, levels[lvlIndex].f);

function game(ctx){
	if(!currentlevel.done){
		currentlevel.render(ctx);
	}
	else{
		lvlIndex++;
		currentlevel = new level(levels[lvlIndex].o, levels[lvlIndex].p, levels[lvlIndex].f);
	}
};

setInterval(function(){game(ctx)}, RENDER_TIME);
