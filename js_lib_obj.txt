start js_lib
walker@!!: open
function walker(inp){
	var x = parseInt(inp[0]);
	var y = parseInt(inp[1]);
	var dstX = parseInt(inp[0]);
	var dstY = parseInt(inp[1]);
	var deltaX = 0.000;
	var deltaY = 0.000;
	var dirX = 1;
	var dirY = 1;
	var speed = parseInt(inp[4]);
	var width = parseInt(inp[2]);
	var height = parseInt(inp[3]);
	var img = 'yellowSmile01.png';
	this.nextXY = function(){
		function inRegion(borderA, borderB, point) {
			var res = false;
			if (borderA < point && point < borderB) {
				res = true;
			};
			return res;
		};
		
		function setCoord(coord, coordDest, coordDir, coordSpeed) {

			var res = 0;
			if (coord == coordDest){
				res = coord;
			} else {
				var cur = coord + coordDir*coordSpeed;
				if (inRegion(coord, cur, coordDest) || inRegion(cur, coord, coordDest))	{
					res = coordDest;
				} else {
					res = cur;
				};
			};
			return res;
		};

		var xc = setCoord(x, dstX, dirX, deltaX);
		var yc = setCoord(y, dstY, dirY, deltaY);

		return [xc, yc]
	}
	this.next = function(){
		var c = this.nextXY();
		return [Math.round(c[0]), Math.round(c[1])];
	};
	this.setDst = function(inp){
		dstX = inp[0];
		dstY = inp[1];
		// if destination < current position then reverse direction
		if (dstX > x) {
			dirX = 1;
		} else {
			dirX = -1;
		};

		if (dstY > y){
			dirY = 1;
		} else {
			dirY = -1;
		};
		//inc step = speed
		var dx = Math.abs(dstX-x)/speed;
		var dy = Math.abs(dstY-y)/speed;

		if (dx > dy){
			deltaX = speed;
			deltaY = dy*speed/dx;
		} else {
			deltaY = speed;
			deltaX = dx/(dy/speed);
		};
	}
	this.step = function(){
		var c = this.nextXY();
		x = c[0];
		y = c[1];
	};
	this.getPic = function(){
		return img;
	};
	this.getDim = function(){
		return [width, height];
	};
	this.getXY = function(){
		return [Math.round(x), Math.round(y)];
	};
}
walker@!!: close
fon@!!: open
function fon(){
	var x = 0;
	var y = 0;
	var width = GAME_FIELD_WIDTH;
	var height = GAME_FIELD_HEIGHT;
	var img = 'fon02.png';
	this.getPic = function(){
		return img;
	};
	this.getDim = function(){
		return [width, height];
	};
	this.getXY = function(){
		return [x, y];
	};
}
fon@!!: close
invisible@!!: open
function invisible(inp){
	var x = parseInt(inp[0]);
	var y = parseInt(inp[1]);
	var width = parseInt(inp[2]);
	var height = parseInt(inp[3]);
	var img = 'yellowSmile01.png';
	this.getPic = function(){
		return img;
	};
	this.getDim = function(){
		return [width, height];
	};
	this.getXY = function(){
		return [x, y];
	};
}
invisible@!!: close
end js_lib
